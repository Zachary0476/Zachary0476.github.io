<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="/2023/05/23/uri%E7%BC%96%E7%A0%81%E5%A4%84%E7%90%86/"/>
      <url>/2023/05/23/uri%E7%BC%96%E7%A0%81%E5%A4%84%E7%90%86/</url>
      
        <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 输出：</span></span><br><span class="line"><span class="comment"> * &#123;</span></span><br><span class="line"><span class="comment"> *  name: &quot;coder&quot;,</span></span><br><span class="line"><span class="comment"> *  age: &quot;20&quot;,</span></span><br><span class="line"><span class="comment"> *  callback: &quot;https://youzan.com?name=test&quot;,</span></span><br><span class="line"><span class="comment"> *  list: [&quot;a&quot;, &quot;b&quot;],</span></span><br><span class="line"><span class="comment"> *  json: &#123;</span></span><br><span class="line"><span class="comment"> *      str: &#x27;abc&#x27;,</span></span><br><span class="line"><span class="comment"> *      num: 123</span></span><br><span class="line"><span class="comment"> *  &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> originUri = <span class="string">&#x27;https://www.youzan.com?name=coder&amp;age=20&amp;callback=https%3A%2F%2Fyouzan.com%3Fname%3Dtest&amp;list[]=a&amp;list[]=b&amp;json=%7B%22str%22%3A%22abc%22,%22num%22%3A123%7D&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">parseQuery</span>(<span class="params">inputUri</span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> hash = &#123;&#125;</span><br><span class="line">    hash[<span class="string">&#x27;list&#x27;</span>] = []</span><br><span class="line">    <span class="keyword">const</span> uriStr = <span class="built_in">decodeURIComponent</span>(inputUri)</span><br><span class="line">    <span class="keyword">const</span> url = <span class="keyword">new</span> <span class="title function_">URL</span>(uriStr)</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> u <span class="keyword">of</span> url.<span class="property">searchParams</span>) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            u[<span class="number">1</span>] = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(u[<span class="number">1</span>])</span><br><span class="line">        &#125; <span class="keyword">catch</span>(e) &#123;&#125;</span><br><span class="line">        <span class="comment">// 暂时没好的处理方式 先当成特殊标识符处理</span></span><br><span class="line">        <span class="keyword">if</span>(u[<span class="number">0</span>] === <span class="string">&#x27;list[]&#x27;</span>) &#123;</span><br><span class="line">            hash[<span class="string">&#x27;list&#x27;</span>].<span class="title function_">push</span>(u[<span class="number">1</span>])</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">           hash[u[<span class="number">0</span>]] = u[<span class="number">1</span>]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> hash</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">parseQuery</span>(originUri)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>基于sleep函数的红绿灯功能</title>
      <link href="/2023/05/21/%E5%9F%BA%E4%BA%8Esleep%E5%87%BD%E6%95%B0%E7%9A%84%E7%BA%A2%E7%BB%BF%E7%81%AF%E5%8A%9F%E8%83%BD/"/>
      <url>/2023/05/21/%E5%9F%BA%E4%BA%8Esleep%E5%87%BD%E6%95%B0%E7%9A%84%E7%BA%A2%E7%BB%BF%E7%81%AF%E5%8A%9F%E8%83%BD/</url>
      
        <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 手写红灯 2s红灯 1s黄灯 3s绿灯</span></span><br><span class="line"><span class="comment">// 1.采用setTimeout嵌套；</span></span><br><span class="line"><span class="comment">// 2.如下方式promise + async/await</span></span><br><span class="line"><span class="comment">// 3.generater函数方式</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">sleep</span> = (<span class="params">t</span>) =&gt; <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function"><span class="params">resolve</span> =&gt;</span> <span class="built_in">setTimeout</span>(resolve, t))</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">start</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">await</span> <span class="title function_">sleep</span>( <span class="number">2</span>* <span class="number">1000</span>)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;red&#x27;</span>)</span><br><span class="line">    <span class="keyword">await</span> <span class="title function_">sleep</span>( <span class="number">1</span>* <span class="number">1000</span>)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;yellow&#x27;</span>)</span><br><span class="line">    <span class="keyword">await</span> <span class="title function_">sleep</span>( <span class="number">3</span>* <span class="number">1000</span>)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;green&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">start</span>()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
