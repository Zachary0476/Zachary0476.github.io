<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>URI反编译后按照指定格式进行解析</title>
      <link href="/2023/05/23/URI%E5%8F%8D%E7%BC%96%E8%AF%91%E5%90%8E%E6%8C%89%E7%85%A7%E6%8C%87%E5%AE%9A%E6%A0%BC%E5%BC%8F%E8%BF%9B%E8%A1%8C%E8%A7%A3%E6%9E%90/"/>
      <url>/2023/05/23/URI%E5%8F%8D%E7%BC%96%E8%AF%91%E5%90%8E%E6%8C%89%E7%85%A7%E6%8C%87%E5%AE%9A%E6%A0%BC%E5%BC%8F%E8%BF%9B%E8%A1%8C%E8%A7%A3%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<pre><code class="javascript">/* 输出： * &#123; *  name: &quot;coder&quot;, *  age: &quot;20&quot;, *  callback: &quot;https://youzan.com?name=test&quot;, *  list: [&quot;a&quot;, &quot;b&quot;], *  json: &#123; *      str: &#39;abc&#39;, *      num: 123 *  &#125; * &#125; */const originUri = &#39;https://www.youzan.com?name=coder&amp;age=20&amp;callback=https%3A%2F%2Fyouzan.com%3Fname%3Dtest&amp;list[]=a&amp;list[]=b&amp;json=%7B%22str%22%3A%22abc%22,%22num%22%3A123%7D&#39;function parseQuery(inputUri) &#123;    const hash = &#123;&#125;    hash[&#39;list&#39;] = []    const uriStr = decodeURIComponent(inputUri)    const url = new URL(uriStr)    for(let u of url.searchParams) &#123;        try &#123;            u[1] = JSON.parse(u[1])        &#125; catch(e) &#123;&#125;        // 暂时没好的处理方式 先当成特殊标识符处理        if(u[0] === &#39;list[]&#39;) &#123;            hash[&#39;list&#39;].push(u[1])        &#125; else &#123;           hash[u[0]] = u[1]        &#125;    &#125;    return hash&#125;parseQuery(originUri)```javascript</code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>基于sleep函数的红绿灯功能</title>
      <link href="/2023/05/21/%E5%9F%BA%E4%BA%8Esleep%E5%87%BD%E6%95%B0%E7%9A%84%E7%BA%A2%E7%BB%BF%E7%81%AF%E5%8A%9F%E8%83%BD/"/>
      <url>/2023/05/21/%E5%9F%BA%E4%BA%8Esleep%E5%87%BD%E6%95%B0%E7%9A%84%E7%BA%A2%E7%BB%BF%E7%81%AF%E5%8A%9F%E8%83%BD/</url>
      
        <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 手写红灯 2s红灯 1s黄灯 3s绿灯</span></span><br><span class="line"><span class="comment">// 1.采用setTimeout嵌套；</span></span><br><span class="line"><span class="comment">// 2.如下方式promise + async/await</span></span><br><span class="line"><span class="comment">// 3.generater函数方式</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">sleep</span> = (<span class="params">t</span>) =&gt; <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function"><span class="params">resolve</span> =&gt;</span> <span class="built_in">setTimeout</span>(resolve, t))</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">start</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">await</span> <span class="title function_">sleep</span>( <span class="number">2</span>* <span class="number">1000</span>)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;red&#x27;</span>)</span><br><span class="line">    <span class="keyword">await</span> <span class="title function_">sleep</span>( <span class="number">1</span>* <span class="number">1000</span>)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;yellow&#x27;</span>)</span><br><span class="line">    <span class="keyword">await</span> <span class="title function_">sleep</span>( <span class="number">3</span>* <span class="number">1000</span>)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;green&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">start</span>()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
